version: 2.1

commands:
  install-preqs:
    steps:
      - run: |
          apt update && \
          apt install -y \
            autoconf-archive \
            build-essential \
            cmake \
            git \
            libboost-filesystem-dev \
            libboost-program-options-dev \
            libboost-system-dev \
            libcpprest-dev \
            libfmt-dev \
            libgmock-dev \
            libgtest-dev \
            libmicrohttpd-dev \
            libmstch-dev \
            libpcre3-dev \
            libspdlog-dev \
            libsystemd-dev \
            libsystemd-dev \
            libtool \
            meson \
            pkg-config \
            python3-pip \
            supervisor \
            swig \
            systemd

  build-libyang:
    description: "Builds libyang"
    steps:
      - run: |
          git clone -q https://github.com/CESNET/libyang.git ~/libyang && \
          cd ~/libyang && \
          git checkout 6f919a91245da7adf79d0d00f5dad0fd2cd3f6bc && \
          mkdir ~/libyang/build
      - run:
          command: |
            cmake -DCMAKE_INSTALL_PREFIX=/usr \
                    -DCMAKE_INSTALL_LIBDIR=/usr/lib \
                    -DCMAKE_BUILD_TYPE=Debug \
                    -DENABLE_LYD_PRIV=ON \
                    -DGEN_LANGUAGE_BINDINGS=1 \
                    -DGEN_PYTHON_BINDINGS=0 \
                    -DGEN_CPP_BINDINGS=1 \
            ..
          workdir: ~/libyang/build
      - run:
          command: make -j $(nproc) install
          workdir: ~/libyang/build

  build-sysrepo:
    description: "Builds sysrepo"
    steps:
      - run: |
          git clone -q https://github.com/sysrepo/sysrepo.git ~/sysrepo && \
          cd ~/sysrepo && \
          git checkout 939db34f78348877da34456c8ef8526538fc52ca && \
          mkdir ~/sysrepo/build
      - run:
          command: |
            cmake \
                -DCMAKE_BUILD_TYPE=Debug \
                -DCMAKE_INSTALL_PREFIX=/usr \
                -DCMAKE_INSTALL_LIBDIR=/usr/lib \
                -DREPOSITORY_LOC=/etc/sysrepo \
                -DREPO_PATH=/etc/sysrepo \
                -DGEN_LANGUAGE_BINDINGS=1 \
                -DGEN_CPP_BINDINGS=1 \
                -DGEN_PYTHON_BINDINGS=0 \
                -Wno-dev \
                ..
          workdir: ~/sysrepo/build
      - run:
          command: make -j $(nproc) install
          workdir: ~/sysrepo/build

  build-sdbusplus:
    description: "Builds sdbusplus"
    steps:
      - run: |
          git clone https://github.com/openbmc/sdbusplus.git ~/sdbusplus && \
          cd ~/sdbusplus && \
          git checkout 4212292bcf136d04b38ba5116aa568b0fa312798
      - run:
          command: |
            ./bootstrap.sh && \
            ./configure --disable-sdbuspp --enable-static --prefix=/usr
          workdir: ~/sdbusplus
      - run:
          command: make -j $(nproc) install
          workdir: ~/sdbusplus

  package-build:
    description: Build packages
    parameters:
      distro:
        type: string
        default: ""
    steps:
      - run: if test -z "<< parameters.distro >>"; then exit 1; fi
      - checkout
      - run: apk add git bash sed grep xz
      - run: git submodule init && git submodule update
      - setup_remote_docker
      - run: 
          command: ./builder/build.sh << parameters.distro >>
          no_output_timeout: 20m
      - run: |
          mkdir << parameters.distro >>-pkgs && \
          mv builder/tmp/latest/<< parameters.distro >>/dist/* << parameters.distro >>-pkgs && \
          tar cJf << parameters.distro >>-pkgs.tar.xz << parameters.distro >>-pkgs
      - store_artifacts:
          path: ~/project/<< parameters.distro >>-pkgs.tar.xz

jobs:
  build-and-test:
    docker:
      - image: debian:buster
    steps:
      - checkout
      - install-preqs
      - build-libyang
      - build-sysrepo
      - build-sdbusplus
      - run:
          command: pip3 install requests nose
      - run: git submodule init && git submodule update
      - run: meson -Dbuild-tests=true build
      - run:
          command: ninja -j5 -v
          workdir: ~/project/build
      - run:
          command: sysrepoctl -i yang/iana-dns-parameters@2016-08-03.yang
          workdir: ~/project
      - run:
          command: sysrepoctl -i yang/iana-dns-class-rr-type@2019-06-27.yang
          workdir: ~/project
      - run:
          command: sysrepoctl -i yang/dns-zone-common@2017-01-12.yang
          workdir: ~/project
      - run:
          command: sysrepoctl -i yang/pdns-server.yang
          workdir: ~/project
      - run:
          command: sysrepoctl -c pdns-server -e rrset-management
          workdir: ~/project
      - run:
          command: ninja -v test || (cat meson-logs/testlog.txt; cat test/remote-backend/pdns-sysrepo.log; false)
          workdir: ~/project/build

  test-model:
    docker:
      - image: debian:buster
    steps:
      - checkout
      - install-preqs
      - build-libyang
      - run: yanglint -VVV --strict yang/pdns-server.yang
      - run: yanglint -VVV -f tree yang/pdns-server.yang

  sdist:
    docker:
      - image: docker:latest
    steps:
      - checkout
      - run: apk add git bash sed grep xz
      - run: git submodule init && git submodule update
      - setup_remote_docker
      - run: ./builder/build.sh sdist
      - run: |
          mkdir sdist-pkgs && \
          mv builder/tmp/latest/sdist/* sdist-pkgs && \
          tar cJf sdist-pkgs.tar.xz sdist-pkgs
      - store_artifacts:
          path: ~/project/sdist-pkgs.tar.xz

  ubuntu-bionic:
    docker:
      - image: docker:latest
    steps:
      - package-build:
          distro: ubuntu-bionic

  debian-buster:
    docker:
      - image: docker:latest
    steps:
      - package-build:
          distro: debian-buster

workflows:
  version: 2
  build_and_test:
    jobs:
      - build-and-test
      - test-model
  packages:
    jobs:
      - sdist
      - ubuntu-bionic
      - debian-buster

